name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: ['2.7', '3.0', '3.1', '3.2']
        gemfile:
          - gemfiles/rails_5_2.gemfile
          - gemfiles/rails_6_0.gemfile
          - gemfiles/rails_6_1.gemfile
          - gemfiles/rails_7_0.gemfile
          - gemfiles/rails_7_1.gemfile
        exclude:
          - ruby: '3.2'
            gemfile: gemfiles/rails_5_2.gemfile
          - ruby: '3.1'
            gemfile: gemfiles/rails_5_2.gemfile
          - ruby: '3.0'
            gemfile: gemfiles/rails_5_2.gemfile
          - ruby: '2.7'
            gemfile: gemfiles/rails_7_1.gemfile
          - ruby: '2.6'
            gemfile: gemfiles/rails_7_1.gemfile
          - ruby: '2.6'
            gemfile: gemfiles/rails_7_0.gemfile
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: delayed_job_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: delayed_job_test
        ports:
            - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      env:
        BUNDLE_GEMFILE: ${{ matrix.gemfile }}
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Run tests
      env:
        BUNDLE_GEMFILE: ${{ matrix.gemfile }}
      run: bundle exec rake
